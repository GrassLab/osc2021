#ifndef _MMU_H
#define _MMU_H

#define MM_TYPE_PAGE_TABLE		    0x3
#define MM_TYPE_PAGE 			    0x3
#define MM_TYPE_BLOCK			    0x1
#define MM_ACCESS			        (0x1 << 10)
#define MM_ACCESS_PERMISSION		(0x01 << 6) 
#define MM_READ_WRITE_PERMISSION    (0x1 << 7)
#define MM_EXACUTE_EL0_PERMISSION   (0x1 << 53)
#define MM_EXACUTE_EL1_PERMISSION   (0x1 << 54)
/*
 * Memory region attributes:
 *
 *   n = AttrIndx[2:0]
 *			n	MAIR
 *   DEVICE_nGnRnE	000	00000000
 *   NORMAL_NC		001	01000100
 */

// MAIR_EL1, Memory Attribute Indirection Register
#define MAIR_DEVICE_nGnRnE      0b00000000
#define MAIR_NORMAL_NOCACHE     0b01000100 // Normal memory, Outer Non-cacheable | Normal memory, Inner Non-cacheable
#define MAIR_IDX_DEVICE_nGnRnE  0
#define MAIR_IDX_NORMAL_NOCACHE 1
#define MAIR_VALUE              ((MAIR_DEVICE_nGnRnE << (MAIR_IDX_DEVICE_nGnRnE * 8)) | (MAIR_NORMAL_NOCACHE << (MAIR_IDX_NORMAL_NOCACHE * 8)))


#define MMU_FLAGS	 		(MM_TYPE_BLOCK | (MAIR_NORMAL_NOCACHE << 2) | MM_ACCESS)	
#define MMU_DEVICE_FLAGS		(MM_TYPE_BLOCK | (MAIR_DEVICE_nGnRnE << 2) | MM_ACCESS)	
#define MMU_PTE_FLAGS			(MM_TYPE_PAGE | (MAIR_NORMAL_NOCACHE << 2) | MM_ACCESS | MM_ACCESS_PERMISSION)	

#define PROT_NONE   (MM_TYPE_PAGE | (MAIR_NORMAL_NOCACHE << 2) | MM_ACCESS | MM_READ_WRITE_PERMISSION | MM_EXACUTE_EL0_PERMISSION | MM_EXACUTE_EL1_PERMISSION)
#define PROT_READ   (MM_TYPE_PAGE | (MAIR_NORMAL_NOCACHE << 2) | MM_ACCESS | MM_READ_WRITE_PERMISSION | MM_ACCESS_PERMISSION | MM_EXACUTE_EL0_PERMISSION | MM_EXACUTE_EL1_PERMISSION)
#define PROT_WRITE  (MM_TYPE_PAGE | (MAIR_NORMAL_NOCACHE << 2) | MM_ACCESS | MM_ACCESS_PERMISSION | MM_EXACUTE_EL0_PERMISSION | MM_EXACUTE_EL1_PERMISSION)
#define PROT_EXEC   (MM_TYPE_PAGE | (MAIR_NORMAL_NOCACHE << 2) | MM_ACCESS | MM_READ_WRITE_PERMISSION | MM_ACCESS_PERMISSION) 


// TCR_EL1, Translation Control Register
#define TTBR0_EL1_REGION_BIT    48
#define TTBR1_EL1_REGION_BIT    48
#define TTBR0_EL1_GRANULE       0b00 // 4KB
#define TTBR1_EL1_GRANULE       0b10 // 4KB

#define TCR_EL1_T0SZ            ((64 - TTBR0_EL1_REGION_BIT) << 0)
#define TCR_EL1_T1SZ            ((64 - TTBR1_EL1_REGION_BIT) << 16)
#define TCR_EL1_TG0             (TTBR0_EL1_GRANULE << 14)
#define TCR_EL1_TG1             (TTBR1_EL1_GRANULE << 30)

#define TCR_EL1_VALUE           (TCR_EL1_T0SZ | TCR_EL1_T1SZ | TCR_EL1_TG0 | TCR_EL1_TG1)



#endif
